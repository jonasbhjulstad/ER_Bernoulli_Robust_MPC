###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "1" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "1" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Program used to build from build.ninja files.")
mark_as_advanced(CMAKE_MAKE_PROGRAM)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/llvm-addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/llvm-ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_CXX_COMPILER_AR)
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_CXX_COMPILER_RANLIB)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/usr/bin/clang" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_COMPILER_AR "/usr/bin/llvm-ar" CACHE FILEPATH "LLVM archiver")
mark_as_advanced(CMAKE_C_COMPILER_AR)
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Generate index for LLVM archive")
mark_as_advanced(CMAKE_C_COMPILER_RANLIB)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "/usr/bin/llvm-dlltool" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld.lld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/llvm-nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_OBJCOPY "/usr/bin/llvm-objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/llvm-readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/llvm-strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_FLTO "1" CACHE INTERNAL "Test HAS_FLTO")
set(HAS_FLTO_THIN "1" CACHE INTERNAL "Test HAS_FLTO_THIN")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_COMPILER "/opt/intel/oneapi/compiler/2022.1.0/linux/bin/icpx" CACHE STRING "CXX compiler")
mark_as_advanced(CMAKE_CXX_COMPILER)
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_COMPILER "/opt/intel/oneapi/compiler/2022.1.0/linux/bin/icx" CACHE STRING "C compiler")
mark_as_advanced(CMAKE_C_COMPILER)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "CMAKE_DLLTOOL-NOTFOUND" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "1" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "CMAKE_DLLTOOL-NOTFOUND" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "CMAKE_DLLTOOL-NOTFOUND" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "CMAKE_DLLTOOL-NOTFOUND" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "CMAKE_DLLTOOL-NOTFOUND" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "CMAKE_DLLTOOL-NOTFOUND" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "CMAKE_DLLTOOL-NOTFOUND" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
###############################################################
# Dump of all cache variables that started with CMAKE_*
###############################################################
set(CMAKE_ADDR2LINE "/usr/bin/addr2line" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_ADDR2LINE)
set(CMAKE_AR "/usr/bin/ar" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_AR)
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...")
set(CMAKE_CACHEFILE_DIR "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug" CACHE INTERNAL "This is the directory where this CMakeCache.txt was created")
set(CMAKE_CACHE_MAJOR_VERSION "3" CACHE INTERNAL "Major version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_MINOR_VERSION "23" CACHE INTERNAL "Minor version of cmake used to create the current loaded cache")
set(CMAKE_CACHE_PATCH_VERSION "2" CACHE INTERNAL "Patch version of cmake used to create the current loaded cache")
set(CMAKE_CHECKS_CACHE_FILE "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp/cmake-build-debug/cmake_checks_cache.txt" CACHE FILEPATH "CMake checks cache file")
set(CMAKE_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cmake" CACHE INTERNAL "Path to CMake executable.")
set(CMAKE_CPACK_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/cpack" CACHE INTERNAL "Path to cpack program executable.")
set(CMAKE_CTEST_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ctest" CACHE INTERNAL "Path to ctest program executable.")
set(CMAKE_CXX_FLAGS "" CACHE STRING "Flags used by the CXX compiler during all build types.")
mark_as_advanced(CMAKE_CXX_FLAGS)
set(CMAKE_CXX_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the CXX compiler during DEBUG builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG)
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELEASE builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the CXX compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
set(CMAKE_C_FLAGS "" CACHE STRING "Flags used by the C compiler during all build types.")
mark_as_advanced(CMAKE_C_FLAGS)
set(CMAKE_C_FLAGS_DEBUG "-g" CACHE STRING "Flags used by the C compiler during DEBUG builds.")
mark_as_advanced(CMAKE_C_FLAGS_DEBUG)
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "Flags used by the C compiler during MINSIZEREL builds.")
mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL)
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELEASE builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELEASE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "Flags used by the C compiler during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO)
set(CMAKE_DLLTOOL "CMAKE_DLLTOOL-NOTFOUND" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_DLLTOOL)
set(CMAKE_EDIT_COMMAND "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/bin/ccmake" CACHE INTERNAL "Path to cache edit program executable.")
set(CMAKE_EXECUTABLE_FORMAT "ELF" CACHE INTERNAL "Executable file format")
set(CMAKE_EXE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during all build types.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS)
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during DEBUG builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG)
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during MINSIZEREL builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during RELEASE builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE)
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_EXPORT_COMPILE_COMMANDS "" CACHE BOOL "Enable/Disable output of compile commands during generation.")
mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS)
set(CMAKE_EXTRA_GENERATOR "" CACHE INTERNAL "Name of external makefile project generator.")
set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "Name of generator.")
set(CMAKE_GENERATOR_INSTANCE "" CACHE INTERNAL "Generator instance identifier.")
set(CMAKE_GENERATOR_PLATFORM "" CACHE INTERNAL "Name of generator platform.")
set(CMAKE_GENERATOR_TOOLSET "" CACHE INTERNAL "Name of generator toolset.")
set(CMAKE_HAVE_LIBC_PTHREAD "1" CACHE INTERNAL "Test CMAKE_HAVE_LIBC_PTHREAD")
set(CMAKE_HAVE_PTHREAD_H "1" CACHE INTERNAL "Have include pthread.h")
set(CMAKE_HOME_DIRECTORY "/home/arch/Documents/Bernoulli_Network_Optimal_Control/Cpp" CACHE INTERNAL "Source directory with the top level CMakeLists.txt file for this project")
set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Install path prefix, prepended onto install directories.")
set(CMAKE_INSTALL_SO_NO_EXE "0" CACHE INTERNAL "Install .so files without execute permission.")
set(CMAKE_LINKER "/usr/bin/ld" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_LINKER)
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of modules during all build types.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS)
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of modules during DEBUG builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG)
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of modules during MINSIZEREL builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of modules during RELEASE builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE)
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_NM "/usr/bin/nm" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_NM)
set(CMAKE_NUMBER_OF_MAKEFILES "18" CACHE INTERNAL "number of local generators")
set(CMAKE_OBJCOPY "/usr/bin/objcopy" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJCOPY)
set(CMAKE_OBJDUMP "/usr/bin/objdump" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_OBJDUMP)
set(CMAKE_PLATFORM_INFO_INITIALIZED "1" CACHE INTERNAL "Platform information initialized")
set(CMAKE_RANLIB "/usr/bin/ranlib" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_RANLIB)
set(CMAKE_READELF "/usr/bin/readelf" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_READELF)
set(CMAKE_ROOT "/home/arch/Downloads/clion-2022.2.1/bin/cmake/linux/share/cmake-3.23" CACHE INTERNAL "Path to CMake installation.")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of shared libraries during all build types.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS)
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of shared libraries during DEBUG builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG)
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELEASE builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE)
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_SKIP_INSTALL_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when installing shared libraries, but are added when building.")
mark_as_advanced(CMAKE_SKIP_INSTALL_RPATH)
set(CMAKE_SKIP_RPATH "NO" CACHE BOOL "If set, runtime paths are not added when using shared libraries.")
mark_as_advanced(CMAKE_SKIP_RPATH)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE STRING "Flags used by the linker during the creation of static libraries during all build types.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS)
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "" CACHE STRING "Flags used by the linker during the creation of static libraries during DEBUG builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG)
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL "" CACHE STRING "Flags used by the linker during the creation of static libraries during MINSIZEREL builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL)
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELEASE builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE)
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "" CACHE STRING "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.")
mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO)
set(CMAKE_STRIP "/usr/bin/strip" CACHE FILEPATH "Path to a program.")
mark_as_advanced(CMAKE_STRIP)
set(CMAKE_UNAME "/usr/bin/uname" CACHE INTERNAL "uname command")
set(CMAKE_VERBOSE_MAKEFILE "FALSE" CACHE BOOL "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.")
mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
###############################################################
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(HAS_INTEL_IPO "" CACHE INTERNAL "Test HAS_INTEL_IPO")
set(_fsycl_option "1" CACHE INTERNAL "Test _fsycl_option")
